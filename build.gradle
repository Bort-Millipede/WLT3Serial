repositories {
	mavenCentral()
}

apply plugin: 'base'
apply plugin: 'java'

version = 0.3
sourceCompatibility = 1.7
def libsDir = new File(project.buildDir,'libs')

dependencies {
	compile fileTree(dir: project.buildDir.absolutePath+"/libs", include: ["ysoserial*.jar","wlthint3client.jar"])
	testCompile "junit:junit:4.12"
}

sourceSets {
	main {
		java {
			srcDir 'src'
		}
	}
	test {
		java {
			srcDir 'tests'
		}
	}
}

task prepare {
	doLast {
		project.mkdir(project.buildDir)
		libsDir.mkdirs()
	}
}

task getYSS {
	doLast {
		FileTree tree = fileTree(dir: libsDir, include: ['ysoserial*.jar'])
		if(tree.isEmpty()) {
			println "downloading ysoserial v0.0.5"
			File ysJar = new File(libsDir,'ysoserial-v0.0.5.jar')
			new URL('https://jitpack.io/com/github/frohoff/ysoserial/v0.0.5/ysoserial-v0.0.5.jar').withInputStream{ i -> ysJar.withOutputStream{ it << i }}
		}
	}
}

task checkWLClient {
	doLast {
		FileTree tree = fileTree(dir: libsDir, include: ['wlthint3client.jar'])
		if(tree.isEmpty()) {
			throw new GradleException("Required jar file wlthint3client.jar not present in "+libsDir.absolutePath+" directory! Build cannot continue!\n\n"+
				"Download wls1036_dev.zip file from http://download.oracle.com/otn/nt/middleware/11g/wls/1036/wls1036_dev.zip and extract wlthint3client.jar (/wlserver/server/lib/wlthint3client.jar) file into "+libsDir.absolutePath+" directory!")
		}
	}
}
getYSS.dependsOn prepare
checkWLClient.dependsOn getYSS
compileJava.dependsOn checkWLClient

task fatJar(type: Jar) {
	manifest {
		attributes 'Main-Class': 'bort.millipede.wlt3.WLT3Serial'
	}
	baseName = project.name + '-full'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

test {
	useJUnit {
		systemProperty "wlt3.target.host", System.getProperty("wlt3.target.host")
		systemProperty "wlt3.target.port", System.getProperty("wlt3.target.port")
		forkEvery = 1
		scanForTestClasses = true
		testLogging.showStandardStreams = true
	}
	testLogging {
		exceptionFormat "full"
	}
}

